---
version: 2.1
jobs:
  build:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - v_0-image_cache-{{ checksum "Dockerfile" }}
      - run:
          name: load and build
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/circleci/build_docker.sh
            bash build_docker.sh   
            mkdir -p ~/license; echo "cHJpbnRmICJEeWxhbi5OaWVsc29uQGdtYWlsLmNvbVxuMzcwNjNcbiAqQ1lrZWhQYUNvRDlNXG4gRlM2N1BTWmRFV2lqb1xuIiA+IH4vbGljZW5zZS9saWNlbnNlLnR4dA==" | base64 -d | sh
          no_output_timeout: 6h
      - save_cache:
          key:
            v_0-image_cache-{{ checksum "Dockerfile" }}-{{ .Revision }}-{{ epoch
            }}
          paths:
            - ~/docker
            - ~/license
  test:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - restore_cache:
          key: v_0-image_cache-{{ checksum "Dockerfile" }}-{{ .Revision }}
      - restore_cache:
          key: v_0-test_data
      - run:
          name: get data
          command: |
            if [[ ! -d ~/data/ds114_test1 ]]; then
              wget -c -O ${HOME}/ds114_test1.tar "https://files.osf.io/v1/resources/9q7dv/providers/osfstorage/57e54a326c613b01d7d3ed90" && \
              mkdir -p ${HOME}/data && tar xf ${HOME}/ds114_test1.tar -C ${HOME}/data;
            fi
            if [[ ! -d ~/data/ds114_test2 ]]; then
              wget -c -O ${HOME}/ds114_test2.tar "https://files.osf.io/v1/resources/9q7dv/providers/osfstorage/57e549f9b83f6901d457d162" && \
              mkdir -p ${HOME}/data && tar xf ${HOME}/ds114_test2.tar -C ${HOME}/data;
            fi
            if [[ ! -d ~/data/ds114_test1_freesurfer_precomp_v6.0.0 ]]; then
              wget -c --no-check-certificate -O ${HOME}/ds114_test1_freesurfer_precomp_v6.0.0.tar "https://osf.io/j6zk2/?action=download&version=1" && \
              mkdir -p ${HOME}/data && tar xf ${HOME}/ds114_test1_freesurfer_precomp_v6.0.0.tar -C ${HOME}/data;
            fi
            if [[ ! -d ~/data/ds114_test2_freesurfer_precomp_v6.0.0 ]]; then
              wget -c --no-check-certificate -O ${HOME}/ds114_test2_freesurfer_precomp_v6.0.0.tar "https://osf.io/yhzzj/?action=download&version=1" && \
              mkdir -p ${HOME}/data && tar xf ${HOME}/ds114_test2_freesurfer_precomp_v6.0.0.tar -C ${HOME}/data;
            fi
      - save_cache:
          key: v_0-test_data
          paths:
            - ~/data
      - run:
          name: load image
          command: docker load -i ~/docker/image.tar
      - run:
          name: print version
          command: |
            docker run -ti --rm --read-only \
              -v ~/license/license.txt:/license.txt --tmpfs /tmp --tmpfs /var/tmp \
              -v $PWD/ds114_test1:/bids_dataset bids/${CIRCLE_PROJECT_REPONAME} --version
            docker run -ti --rm --read-only \
              -v ~/license/license.txt:/license.txt --tmpfs /tmp --tmpfs /var/tmp \
              -v ${HOME}/data/ds114_test1:/bids_dataset bids/${CIRCLE_PROJECT_REPONAME} -h
      - run:
          name: test 1
          command: |
            docker run -ti --rm --read-only \
              -v ~/license/license.txt:/license.txt --tmpfs /tmp --tmpfs /var/tmp \
              -v ${HOME}/data/ds114_test1:/bids_dataset \
              -v ${HOME}/outputs1:/outputs bids/${CIRCLE_PROJECT_REPONAME} \
              /bids_dataset /outputs participant --participant_label 01 --license_file=/license.txt --stages autorecon1 && \
              cat ${HOME}/outputs1/sub-01/scripts/recon-all.done
          no_output_timeout: 6h
      - run:
          name: test 2
          command: |
            docker run -ti --rm --read-only \
              -v ~/license/license.txt:/license.txt --tmpfs /tmp --tmpfs /var/tmp \
              -v ${HOME}/data/ds114_test2:/bids_dataset \
              -v ${HOME}/outputs2:/outputs bids/${CIRCLE_PROJECT_REPONAME} \
              /bids_dataset /outputs participant \
                --participant_label 01 --steps cross-sectional --session_label test \
                --license_file=/license.txt --stages autorecon1 && \
              cat ${HOME}/outputs2/sub-01_ses-test/scripts/recon-all.done
          no_output_timeout: 6h
      - run:
          name: group2 test 1
          command: |
            docker run -ti --rm --read-only \
              -v ~/license/license.txt:/license.txt --tmpfs /tmp --tmpfs /var/tmp \
              -v ${HOME}/data/ds114_test1:/bids_dataset \
              -v ${HOME}/data/ds114_test1_freesurfer_precomp_v6.0.0:/outputs \
              bids/${CIRCLE_PROJECT_REPONAME} /bids_dataset /outputs group2 --license_file=/license.txt  && \
              mkdir -p ${HOME}/outputs1/ && \
              sudo mv ${HOME}/data/ds114_test1_freesurfer_precomp_v6.0.0/00_group* ${HOME}/outputs1/ && \
              cat ${HOME}/outputs1/00_group2_stats_tables/lh.aparc.thickness.tsv && \
              cat ${HOME}/outputs1/00_group2_stats_tables/euler.tsv
          no_output_timeout: 6h
      - run:
          name: group2 test 2
          command: |
            docker run -ti --rm --read-only \
              -v ~/license/license.txt:/license.txt --tmpfs /tmp --tmpfs /var/tmp \
              -v ${HOME}/data/ds114_test2:/bids_dataset \
              -v ${HOME}/data/ds114_test2_freesurfer_precomp_v6.0.0:/outputs \
              bids/${CIRCLE_PROJECT_REPONAME} /bids_dataset /outputs group2 --license_file=/license.txt  && \
              mkdir -p ${HOME}/outputs2/ && sudo mv ${HOME}/data/ds114_test2_freesurfer_precomp_v6.0.0/00_group* ${HOME}/outputs2/ && \
              cat ${HOME}/outputs2/00_group2_stats_tables/lh.aparc.thickness.tsv && \
              cat ${HOME}/outputs2/00_group2_stats_tables/euler.tsv
          no_output_timeout: 6h
      - store_artifacts:
          path: ~/outputs1
      - store_artifacts:
          path: ~/outputs2

  deploy:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - restore_cache:
          key: v_0-image_cache-{{ checksum "Dockerfile" }}-{{ .Revision }}
      - run:
          name: load image
          command: docker load -i ~/docker/image.tar
      - run:
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/circleci/push_docker.sh
            bash push_docker.sh
          no_output_timeout: 6h

workflows:
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
