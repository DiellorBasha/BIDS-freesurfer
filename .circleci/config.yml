---
version: 2.1
jobs:

  build:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: large
    parameters:
      version:
        type: string
    steps:
    - checkout
    - run:
        name: load and build
        command: |
          tar_name=image_fs<< parameters.version >>.tar
          if [[ -e ~/docker/${tar_name} ]]; then
            docker load -i ~/docker/${tar_name}
          fi
          git describe --tags > version
          docker build -t bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> -f Dockerfile_fs<< parameters.version >> .
          mkdir -p ~/docker; docker save "bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >>" > ~/docker/${tar_name}
          mkdir -p ~/license_fs<< parameters.version >>
          mkdir -p ~/license
          echo "cHJpbnRmICJEeWxhbi5OaWVsc29uQGdtYWlsLmNvbVxuMzcwNjNcbiAqQ1lrZWhQYUNvRDlNXG4gRlM2N1BTWmRFV2lqb1xuIiA+IH4vbGljZW5zZS9saWNlbnNlLnR4dA==" | base64 -d | sh
          cp ~/license/license.txt ~/license_fs<< parameters.version >>/license.txt
          rm -r ~/license
    - persist_to_workspace:
        root: /home/circleci
        paths:
        - docker/image_fs<< parameters.version >>.tar
        - license_fs<< parameters.version >>/license.txt

  get_data:
    machine:
      # https://circleci.com/developer/machine/image/ubuntu-2204
      image: ubuntu-2204:2022.10.2
    steps:
    - checkout
    - restore_cache:
        key: v_0-test_data
    - run:
        name: Get test data
        command: |
          wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/utils/get_data_from_osf.sh
          bash get_data_from_osf.sh ds114_test1
          bash get_data_from_osf.sh ds114_test2
          bash get_data_from_osf.sh ds114_test1_freesurfer_precomp_v6.0.0
          bash get_data_from_osf.sh ds114_test2_freesurfer_precomp_v6.0.0
    - save_cache:
        key: v_0-test_data
        paths:
        - ~/data
    - persist_to_workspace:
        root: /home/circleci
        paths:
        - data/ds114_test1
        - data/ds114_test2
        - data/ds114_test1_freesurfer_precomp_v6.0.0
        - data/ds114_test2_freesurfer_precomp_v6.0.0

  test:
    machine:
      image: ubuntu-2204:2022.10.2
    parameters:
      version:
        type: string
      test:
        type: string
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace

    - run:
        name: load image
        command: |
          docker load -i /tmp/workspace/docker/image_fs<< parameters.version >>.tar

    - run:
        name: print version
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license_fs<< parameters.version >>/license.txt:/license.txt \
            -v /tmp/workspace/ds114_test1:/bids_dataset \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> --version

    - run:
        name: print help
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license_fs<< parameters.version >>/license.txt:/license.txt \
            -v /tmp/workspace/data/ds114_test1:/bids_dataset \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> -h

    - run: mkdir -p ${HOME}/outputs<< parameters.test >>

    - run:
        name: test << parameters.test >>
        command: |2

          if [[ << parameters.test >> -eq 1 ]]; then
            docker run -ti --rm --read-only \
              -v /tmp/workspace/license_fs<< parameters.version >>/license.txt:/license.txt \
              -v /tmp/workspace/data/ds114_test<< parameters.test >>:/bids_dataset \
              -v ${HOME}/outputs<< parameters.test >>:/outputs \
              --tmpfs /tmp --tmpfs /var/tmp \
                bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> \
                  /bids_dataset \
                  /outputs \
                  participant \
                  --participant_label 01 \
                  --license_file=/license.txt \
                  --stages autorecon1

            cat ${HOME}/outputs<< parameters.test >>/sub-01/scripts/recon-all.done

          fi

          if [[ << parameters.test >> -eq 2 ]]; then
            docker run -ti --rm --read-only \
              -v /tmp/workspace/license_fs<< parameters.version >>/license.txt:/license.txt \
              -v /tmp/workspace/data/ds114_test<< parameters.test >>:/bids_dataset \
              -v ${HOME}/outputs<< parameters.test >>:/outputs \
              --tmpfs /tmp --tmpfs /var/tmp \
                bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> \
                  /bids_dataset \
                  /outputs \
                  participant \
                  --participant_label 01 \
                  --license_file=/license.txt \
                  --stages autorecon1 \
                  --steps cross-sectional \
                  --session_label test

            cat ${HOME}/outputs<< parameters.test >>/sub-01_ses-test/scripts/recon-all.done
          fi

    - run:
        name: group2 test << parameters.test >>
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license_fs<< parameters.version >>/license.txt:/license.txt \
            -v /tmp/workspace/data/ds114_test<< parameters.test >>:/bids_dataset \
            -v /tmp/workspace/data/ds114_test<< parameters.test >>_freesurfer_precomp_v6.0.0:/outputs \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> \
                /bids_dataset \
                /outputs \
                group2 \
                --license_file=/license.txt

          sudo mv /tmp/workspace/data/ds114_test<< parameters.test >>_freesurfer_precomp_v6.0.0/00_group* \
                  ${HOME}/outputs<< parameters.test >>/
          cat ${HOME}/outputs<< parameters.test >>/00_group2_stats_tables/lh.aparc.thickness.tsv
          cat ${HOME}/outputs<< parameters.test >>/00_group2_stats_tables/euler.tsv

    - store_artifacts:
        path: ~/outputs<< parameters.test >>

  deploy:
    machine:
      image: ubuntu-2204:2022.10.2
    parameters:
      version:
        type: string
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: load image
        command: |
          docker load -i /tmp/workspace/docker/image_fs<< parameters.version >>.tar
    - run:
        name: push to dockerhub
        command: |
          if [[ -n "${DOCKER_TOKEN}" ]]; then

            echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_USER}" --password-stdin

            # make sure we have a lowercase repo
            user_name="bids"

            repo_name=$(echo "${CIRCLE_PROJECT_REPONAME}" | tr '[:upper:]' '[:lower:]')

            FS_MAJOR_VERSION=<< parameters.version >>
            if [[ FS_MAJOR_VERSION -eq 6 ]]; then
              FS_VERSION=6.0.1
            else
              FS_VERSION=7.4.1
            fi

            : "Pushing unstable versions for ${FS_MAJOR_VERSION} to DockerHub"

            unstable="${user_name}/${repo_name}:${FS_VERSION}-unstable"
            major_unstable="${user_name}/${repo_name}:${FS_MAJOR_VERSION}-unstable"

            docker tag "${user_name}/${repo_name}_fs<< parameters.version >>" "${unstable}"
            docker push "${unstable}"
            docker tag "${unstable}" "${major_unstable}"
            docker push "${major_unstable}"

            if [[  -n "${CIRCLE_TAG}" ]]; then

              : "Pushing stable and latest versions for ${FS_VERSION} to DockerHub"

              latest="${user_name}/${repo_name}:latest"

              if [[ FS_MAJOR_VERSION -eq 6 ]]; then
                  docker tag "${unstable}" "${latest}"
                  docker push "${latest}"
              fi

              major_tagged_release="${user_name}/${repo_name}:${FS_MAJOR_VERSION}-${CIRCLE_TAG}"
              docker tag "${major_unstable}" "${major_tagged_release}"
              docker push "${major_tagged_release}"

              tagged_release="${user_name}/${repo_name}:${FS_VERSION}-${CIRCLE_TAG}"
              docker tag "${unstable}" "${tagged_release}"
              docker push "${tagged_release}"

            fi

          else
              : "No DOCKER_TOKEN, skipping push to DockerHub"
              exit 1
          fi

workflows:
  build_test_deploy:
    jobs:

    - get_data:
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/

    - build:
        name: build_<< matrix.version >>
        matrix:
          parameters:
            version: ['6', '7']
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/

    - test:
        name: test_<< matrix.version >>
        matrix:
          parameters:
            version: ['6', '7']
            test: ['1', '2']
        requires:
        - build_<< matrix.version >>
        - get_data
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/

    - deploy:
        matrix:
          parameters:
            version: ['6', '7']
        context:
        - dockerhub
        requires:
        - test_<< matrix.version >>
        filters:
          branches:
            only: /.*/
          tags:
            only: /.*/
