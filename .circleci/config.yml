---
version: 2.1
jobs:

  build:
    machine:
      image: ubuntu-2204:2022.10.2
    parameters:
      version:
        type: string
    steps:
    - checkout
    - restore_cache:
        keys:
        - v_0-image_cache_fs<< parameters.version >>-{{ checksum "Dockerfile_fs<< parameters.version >>" }}
    - run:
        name: load and build
        command: |
          tar_name=image_fs<< parameters.version >>.tar
          if [[ -e ~/docker/${tar_name} ]]; then
            docker load -i ~/docker/${tar_name}
          fi
          git describe --tags > version
          docker build -t bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> -f Dockerfile_fs<< parameters.version >> .
          mkdir -p ~/docker; docker save "bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >>" > ~/docker/${tar_name}
          mkdir -p ~/license
          echo "cHJpbnRmICJEeWxhbi5OaWVsc29uQGdtYWlsLmNvbVxuMzcwNjNcbiAqQ1lrZWhQYUNvRDlNXG4gRlM2N1BTWmRFV2lqb1xuIiA+IH4vbGljZW5zZS9saWNlbnNlLnR4dA==" | base64 -d | sh
    - save_cache:
        key: v_0-image_cache_fs<< parameters.version >>-{{ checksum "Dockerfile_fs<< parameters.version >>" }}-{{ .Revision }}-{{ epoch }}
        paths:
        - ~/docker
        - ~/license
    - persist_to_workspace:
        root: /home/circleci
        paths:
        - docker/image_fs<< parameters.version >>.tar
        - license/license.txt

  get_data:
    machine:
      # https://circleci.com/developer/machine/image/ubuntu-2204
      image: ubuntu-2204:2022.10.2
    steps:
    - checkout
    - restore_cache:
        key: v_0-test_data
    - run:
        name: Get test data
        command: |
          wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/utils/get_data_from_osf.sh
          bash get_data_from_osf.sh ds114_test1
          bash get_data_from_osf.sh ds114_test2
          bash get_data_from_osf.sh ds114_test1_freesurfer_precomp_v6.0.0
          bash get_data_from_osf.sh ds114_test2_freesurfer_precomp_v6.0.0
    - save_cache:
        key: v_0-test_data
        paths:
        - ~/data
    - persist_to_workspace:
        root: /home/circleci
        paths:
        - data/ds114_test1
        - data/ds114_test2
        - data/ds114_test1_freesurfer_precomp_v6.0.0
        - data/ds114_test2_freesurfer_precomp_v6.0.0

  test:
    machine:
      image: ubuntu-2204:2022.10.2
    parameters:
      version:
        type: string
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace

    - run:
        command: |
          docker load -i /tmp/workspace/docker/image_fs<< parameters.version >>.tar

    - run:
        name: print version
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license/license.txt:/license.txt \
            -v /tmp/workspace/ds114_test1:/bids_dataset \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> --version

    - run:
        name: print help
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license/license.txt:/license.txt \
            -v /tmp/workspace/data/ds114_test1:/bids_dataset \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> -h

    - run: mkdir -p ${HOME}/outputs1 ${HOME}/outputs2

    - run:
        name: test 1
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license/license.txt:/license.txt \
            -v /tmp/workspace/data/ds114_test1:/bids_dataset \
            -v ${HOME}/outputs1:/outputs \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> \
                /bids_dataset
                /outputs \
                participant \
                --participant_label 01 \
                --license_file=/license.txt \
                --stages autorecon1

          cat ${HOME}/outputs1/sub-01/scripts/recon-all.done

    - run:
        name: test 2
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license/license.txt:/license.txt \
            -v /tmp/workspace/data/ds114_test2:/bids_dataset \
            -v ${HOME}/outputs2:/outputs \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> \
                /bids_dataset \
                /outputs \
                participant \
                --participant_label 01 \
                --steps cross-sectional \
                --session_label test \
                --license_file=/license.txt \
                --stages autorecon1

          cat ${HOME}/outputs2/sub-01_ses-test/scripts/recon-all.done

    - run:
        name: group2 test 1
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license/license.txt:/license.txt \
            -v /tmp/workspace/data/ds114_test1:/bids_dataset \
            -v /tmp/workspace/data/ds114_test1_freesurfer_precomp_v6.0.0:/outputs \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> \
                /bids_dataset \
                /outputs \
                group2 \
                --license_file=/license.txt

          sudo mv ${HOME}/data/ds114_test1_freesurfer_precomp_v6.0.0/00_group* ${HOME}/outputs1/
          cat ${HOME}/outputs1/00_group2_stats_tables/lh.aparc.thickness.tsv
          cat ${HOME}/outputs1/00_group2_stats_tables/euler.tsv

    - run:
        name: group2 test 2
        command: |
          docker run -ti --rm --read-only \
            -v /tmp/workspace/license/license.txt:/license.txt \
            -v /tmp/workspace/data/ds114_test2:/bids_dataset \
            -v /tmp/workspace/data/ds114_test2_freesurfer_precomp_v6.0.0:/outputs \
            --tmpfs /tmp --tmpfs /var/tmp \
              bids/${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >> \
                /bids_dataset /outputs group2 \
                --license_file=/license.txt

          sudo mv ${HOME}/data/ds114_test2_freesurfer_precomp_v6.0.0/00_group* ${HOME}/outputs2/
          cat ${HOME}/outputs2/00_group2_stats_tables/lh.aparc.thickness.tsv
          cat ${HOME}/outputs2/00_group2_stats_tables/euler.tsv

    - store_artifacts:
        path: ~/outputs1
    - store_artifacts:
        path: ~/outputs2

  deploy:
    machine:
      image: ubuntu-2204:2022.10.2
    parameters:
      version:
        type: string
    steps:
    - checkout
    - attach_workspace:
        at: /tmp/workspace
    - run:
        command: |
          docker load -i /tmp/workspace/docker/image_fs<< parameters.version >>.tar
    - run:
        command: |
          if [[ -n "${DOCKER_TOKEN}" ]]; then

              # make sure we have a lowercase repo
              user_name="bids"
              repo_name=$(echo "${CIRCLE_PROJECT_REPONAME}_fs<< parameters.version >>" | tr '[:upper:]' '[:lower:]')

              if [[ -n "${DOCKER_TOKEN}" ]]; then
                  echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_USER}" --password-stdin

                  : "Pushing to DockerHub ${user_name}/${repo_name}:unstable"
                  docker tag "${user_name}/${repo_name}" "${user_name}/${repo_name}:unstable"
                  docker push "${user_name}/${repo_name}:unstable"

                  if [[ -n "${CIRCLE_TAG}" ]]; then
                      : "Pushing to DockerHub ${user_name}/${repo_name}:${CIRCLE_TAG}"
                      docker push "${user_name}/${repo_name}:latest"
                      docker tag "${user_name}/${repo_name}" "${user_name}/${repo_name}:${CIRCLE_TAG}"
                      docker push "${user_name}/${repo_name}:${CIRCLE_TAG}"
                  fi

              fi

          else
              : "No DOCKER_TOKEN, skipping push to DockerHub"
              exit 1
          fi

workflows:
  build_test_deploy:
    jobs:

    - get_data:
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/

    - build:
        matrix:
          parameters:
            version: ['6', '7']
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/

    - test:
        matrix:
          parameters:
            version: ['6', '7']
        requires:
        - build
        - get_data
        filters:
          tags:
            only: /.*/
          branches:
            only: /.*/

    - deploy:
        matrix:
          parameters:
            version: ['6', '7']
        context:
        - dockerhub
        requires:
        - test
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /.*/
